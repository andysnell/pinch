name: "Release Monorepo"

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., 0.0.0, 0.1.0)"
        required: true
        default: "0.0.0"
        type: string
      skip_split:
        description: "Skip package splitting (useful for testing)"
        required: false
        default: false
        type: boolean

jobs:
  validate_version:
    runs-on: ubuntu-latest
    if: github.repository == 'phoneburner/pinch'
    outputs:
      version: ${{ steps.validate.outputs.version }}
      tag_name: ${{ steps.validate.outputs.tag_name }}

    steps:
      - name: Validate version format
        id: validate
        run: |
          VERSION="${{ github.event.inputs.version }}"

          # Remove 'v' prefix if present
          VERSION=$(echo "$VERSION" | sed 's/^v//')

          # Validate semantic version format
          if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.-]+)?$ ]]; then
            echo "‚ùå Invalid version format: $VERSION"
            echo "Expected format: X.Y.Z or X.Y.Z-suffix (e.g., 1.0.0, 1.0.0-alpha.1)"
            exit 1
          fi

          TAG_NAME="v$VERSION"

          echo "‚úÖ Version: $VERSION"
          echo "‚úÖ Tag: $TAG_NAME"

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

  update_versions:
    runs-on: ubuntu-latest
    needs: validate_version

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update package versions
        run: |
          VERSION="${{ needs.validate_version.outputs.version }}"

          # Update interdependencies using sed (workaround for monorepo-builder bug)
          # This updates all phoneburner/pinch-* package references to the new version

          echo "üì¶ Updating package interdependencies to ^$VERSION..."

          # Update all pinch package dependencies in all composer.json files
          for package in packages/*/composer.json; do
            echo "  Updating: $package"
            sed -i "s/\"phoneburner\/pinch-core\": \"[^\"]*\"/\"phoneburner\/pinch-core\": \"^$VERSION\"/g" "$package"
            sed -i "s/\"phoneburner\/pinch-component\": \"[^\"]*\"/\"phoneburner\/pinch-component\": \"^$VERSION\"/g" "$package"
            sed -i "s/\"phoneburner\/pinch-framework\": \"[^\"]*\"/\"phoneburner\/pinch-framework\": \"^$VERSION\"/g" "$package"
            sed -i "s/\"phoneburner\/pinch-phpstan\": \"[^\"]*\"/\"phoneburner\/pinch-phpstan\": \"^$VERSION\"/g" "$package"
            sed -i "s/\"phoneburner\/pinch-template\": \"[^\"]*\"/\"phoneburner\/pinch-template\": \"^$VERSION\"/g" "$package"
          done

          # Also update root composer.json if it has any pinch dependencies
          if [ -f "composer.json" ]; then
            echo "  Updating: composer.json (root)"
            sed -i "s/\"phoneburner\/pinch-core\": \"[^\"]*\"/\"phoneburner\/pinch-core\": \"^$VERSION\"/g" composer.json
            sed -i "s/\"phoneburner\/pinch-component\": \"[^\"]*\"/\"phoneburner\/pinch-component\": \"^$VERSION\"/g" composer.json
            sed -i "s/\"phoneburner\/pinch-framework\": \"[^\"]*\"/\"phoneburner\/pinch-framework\": \"^$VERSION\"/g" composer.json
            sed -i "s/\"phoneburner\/pinch-phpstan\": \"[^\"]*\"/\"phoneburner\/pinch-phpstan\": \"^$VERSION\"/g" composer.json
            sed -i "s/\"phoneburner\/pinch-template\": \"[^\"]*\"/\"phoneburner\/pinch-template\": \"^$VERSION\"/g" composer.json
          fi

          echo "‚úÖ Updated all package interdependencies to ^$VERSION"

      - name: Commit version changes
        run: |
          TAG_NAME="${{ needs.validate_version.outputs.tag_name }}"
          VERSION="${{ needs.validate_version.outputs.version }}"

          # Configure git
          git config user.name "GitHub Actions"
          git config user.email "action@github.com"

          # Stage changes
          git add .

          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "‚ÑπÔ∏è No version changes to commit"
          else
            # Commit changes
            git commit -m "Release $TAG_NAME

          üöÄ Bump all package versions to $TAG_NAME

          Generated with monorepo-builder"

            # Push changes
            git push origin main
            echo "‚úÖ Committed and pushed version changes"
          fi

      - name: Create and push tag
        run: |
          TAG_NAME="${{ needs.validate_version.outputs.tag_name }}"
          VERSION="${{ needs.validate_version.outputs.version }}"

          # Create annotated tag
          git tag -a "$TAG_NAME" -m "Release $TAG_NAME

          üöÄ Pinch Framework $TAG_NAME

          This release includes all packages:
          - phoneburner/pinch-core
          - phoneburner/pinch-component
          - phoneburner/pinch-framework
          - phoneburner/pinch-phpstan
          - phoneburner/pinch-template

          Packages will be automatically split to individual repositories."

          # Push tag
          git push origin "$TAG_NAME"
          echo "‚úÖ Created and pushed tag $TAG_NAME"

  build_images:
    uses: ./.github/workflows/build-images.yml
    needs: [validate_version, update_versions]
    with:
      ref: ${{ needs.validate_version.outputs.tag_name }}
      docker_tag: ${{ needs.validate_version.outputs.version }}
      always_latest: true

  trigger_split:
    uses: ./.github/workflows/split-packages.yml
    needs: [validate_version, update_versions]
    if: ${{ !inputs.skip_split }}
    with:
      version: ${{ needs.validate_version.outputs.version }}

  create_github_release:
    runs-on: ubuntu-latest
    needs: [validate_version, update_versions]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.validate_version.outputs.tag_name }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.validate_version.outputs.tag_name }}
          name: "Pinch Framework ${{ needs.validate_version.outputs.version }}"
          body: |
            üöÄ **Pinch Framework ${{ needs.validate_version.outputs.version }}**

            This release includes all packages in the Pinch monorepo. Individual packages are automatically split to separate repositories for easier consumption.

            ## üì¶ Split Packages

            The following packages are available individually:

            - [`phoneburner/pinch-core`](https://github.com/phoneburner/pinch-core) - Core utilities and primitives
            - [`phoneburner/pinch-component`](https://github.com/phoneburner/pinch-component) - Framework-agnostic interfaces
            - [`phoneburner/pinch-framework`](https://github.com/phoneburner/pinch) - Batteries-included implementations
            - [`phoneburner/pinch-phpstan`](https://github.com/phoneburner/pinch-phpstan) - Static analysis rules
            - [`phoneburner/pinch-template`](https://github.com/phoneburner/pinch-template) - Application starter template

            ## üõ† Installation

            ```bash
            # Install individual packages
            composer require phoneburner/pinch-core:^${{ needs.validate_version.outputs.version }}
            composer require phoneburner/pinch-framework:^${{ needs.validate_version.outputs.version }}

            # Or use the template to start a new project
            composer create-project phoneburner/pinch-template my-app
            ```

            ## üìö Documentation

            - [Framework Documentation](https://github.com/phoneburner/pinch)
            - [Package Architecture](https://github.com/phoneburner/pinch/tree/main/packages)

            ---

            ü§ñ *This release was created automatically by the Pinch monorepo release system.*
          draft: false
          prerelease: ${{ contains(needs.validate_version.outputs.version, '-') || startsWith(needs.validate_version.outputs.version, '0.') }}
          token: ${{ secrets.GITHUB_TOKEN }}
